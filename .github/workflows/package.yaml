name: packaging

on:
  push:
    branches: [ master ]
    tags: ['*']
  pull_request:
    branches: [ master ]

jobs:
  macos:

    runs-on: macos-latest
    strategy:
      matrix:
        python-version: [3.7]

    env:
      PYTHON_VERSION: ${{ matrix.python-version }}

    steps:
    - uses: actions/checkout@v2

    - name: configure
      shell: bash -l {0}
      run: |
        ulimit -S -n 204800
        sudo sysctl -w kern.maxfiles=204800
        sudo sysctl -w kern.maxfilesperproc=245670

    - uses: conda-incubator/setup-miniconda@v1
      with:
        auto-update-conda: true
        python-version: ${{ matrix.python-version }}
        activate-environment: omnisci-ds-installer
        channels: conda-forge

    - name: install dependencies
      shell: bash -l {0}
      run: |
        conda install -y constructor conda-build
        wget https://repo.anaconda.com/pkgs/misc/conda-execs/conda-latest-osx-64.exe -O conda.exe

    - name: build local version of some dependencies
      shell: bash -l {0}
      run: |
        cd constructor/conda-recipes
        conda-build ibis-framework/
        conda-build holoviews/
        conda-build hvplot/

    - name: run constructor for pkg
      id: pkg_name
      shell: bash -l {0}
      run: |
        constructor --conda-exe conda.exe constructor/pkg
        PKG_NAME=$(ls omnisci-*-MacOSX-x86_64.pkg)
        echo "::set-output name=filename::$PKG_NAME"

    - name: run constructor for sh
      id: sh_name
      shell: bash -l {0}
      run: |
        constructor --conda-exe conda.exe constructor/sh
        SH_NAME=$(ls omnisci-*-MacOSX-x86_64.sh)
        echo "::set-output name=filename::$SH_NAME"

    - name: test shell package
      run: |
        bash ${{ steps.sh_name.outputs.filename }} -b
        /Users/runner/omnisci/bin/python -c "import ibis.omniscidb"
        /Users/runner/omnisci/bin/python -c "import pymapd"
        /Users/runner/omnisci/bin/python -c "import intake"
        /Users/runner/omnisci/bin/python -c "import altair"
        /Users/runner/omnisci/bin/python -c "import ibis_vega_transform"
        /Users/runner/omnisci/bin/python -c "import geoviews"
        /Users/runner/omnisci/bin/python -c "import holoviews"
        /Users/runner/omnisci/bin/python -c "import graphviz"
        /Users/runner/omnisci/bin/python -c "import pydot"

    - name: create release
      id: create_release
      if: startsWith(github.ref, 'refs/tags/')
      uses: ncipollo/release-action@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        allowUpdates: true
        replacesArtifacts: true
        tag: ${{ github.event.release.tag_name }}
        name: Release ${{ github.event.release.tag_name }}
        commit: master
        artifacts: ${{ steps.pkg_name.outputs.filename }},${{ steps.sh_name.outputs.filename }}
        artifactContentType: application/octet-stream
        body: Release ${{ github.event.release.tag_name }}
        token: ${{ secrets.GITHUB_TOKEN }}
